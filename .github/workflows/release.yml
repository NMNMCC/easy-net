name: Build and Release on Push

on:
  push:
    branches:
      - "**"

permissions:
  contents: write

jobs:
  prep:
    name: Prepare tag/name
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.vars.outputs.tag }}
      name: ${{ steps.vars.outputs.name }}
    steps:
      - name: Compute time-based tag
        id: vars
        run: |
          ts=$(date -u +'%Y%m%d-%H%M%S')
          echo "tag=v${ts}" >> "$GITHUB_OUTPUT"
          echo "name=Release ${ts} (UTC)" >> "$GITHUB_OUTPUT"

  build:
    name: Build (${{ matrix.goos }}/${{ matrix.goarch }})
    needs: prep
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Build
        env:
          CGO_ENABLED: 0
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p build
          BIN_NAME="easy-net-${GOOS}-${GOARCH}"
          if [ "${GOOS}" = "windows" ]; then BIN_NAME="${BIN_NAME}.exe"; fi
          go build -trimpath -ldflags "-s -w" -o "build/${BIN_NAME}" ./

      - name: Package artifact
        run: |
          mkdir -p dist
          BIN_NAME="easy-net-${{ matrix.goos }}-${{ matrix.goarch }}"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            zip -j "dist/${BIN_NAME}.zip" "build/${BIN_NAME}.exe"
          else
            tar -C build -czf "dist/${BIN_NAME}.tar.gz" "${BIN_NAME}"
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: easy-net-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/*
          if-no-files-found: error

  release:
    name: Create GitHub Release
    needs: [prep, build]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.prep.outputs.tag }}
          name: ${{ needs.prep.outputs.name }}
          draft: false
          prerelease: false
          files: |
            dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
